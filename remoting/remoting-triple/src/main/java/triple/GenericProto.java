/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transformer.proto

package triple;

public final class GenericProto {
    private GenericProto() {
    }

    public static void registerAllExtensions(
                                             com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
                                             com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    static final com.google.protobuf.Descriptors.Descriptor                internal_static_Request_descriptor;
    static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_Request_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor                internal_static_Response_descriptor;
    static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_Response_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
            getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
    static {
        String[] descriptorData = {
            "\n\021transformer.proto\"@\n\007Request\022\025\n\rserial" +
                "izeType\030\001 \001(\t\022\014\n\004args\030\002 \003(\014\022\020\n\010argTypes\030" +
                "\003 \003(\t\"=\n\010Response\022\025\n\rserializeType\030\001 \001(\t" +
                "\022\014\n\004data\030\002 \001(\014\022\014\n\004type\030\003 \001(\t22\n\016GenericS" +
                "ervice\022 \n\007generic\022\010.Request\032\t.Response\"\000" +
                "B\030\n\006tripleB\014GenericProtoP\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                                                                                   com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
            .internalBuildGeneratedFileFrom(descriptorData,
                new com.google.protobuf.Descriptors.FileDescriptor[] {
                }, assigner);
        internal_static_Request_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_Request_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                    internal_static_Request_descriptor,
                    new String[] { "SerializeType", "Args", "ArgTypes", });
        internal_static_Response_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_Response_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                    internal_static_Response_descriptor,
                    new String[] { "SerializeType", "Data", "Type", });
    }

    // @@protoc_insertion_point(outer_class_scope)
}
